import { Card } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { FileText, Download, Sparkles, Wand2 } from "lucide-react";
import { BiasScoreGauge } from "./BiasScoreGauge";
import { EthicsRadar } from "./EthicsRadar";
import { Badge } from "@/components/ui/badge";

interface AnalysisResult {
  biasScore: number;
  ethicsRadar: {
    fairness: number;
    transparency: number;
    privacy: number;
    accountability: number;
    safety: number;
  };
  summary: string;
  keyFindings: string[];
  recommendations: string[];
}

interface AnalysisReportProps {
  result: AnalysisResult;
  onMitigateBias: () => void;
  isMitigating?: boolean;
}

export const AnalysisReport = ({ result, onMitigateBias, isMitigating = false }: AnalysisReportProps) => {
  const handleDownloadReport = () => {
    const reportContent = `
ETHIC & BIAS ANALYSIS REPORT
=============================

BIAS SCORE: ${result.biasScore}/100

SUMMARY
-------
${result.summary}

KEY FINDINGS
-----------
${result.keyFindings.map((finding, i) => `${i + 1}. ${finding}`).join('\n')}

ETHICAL ASSESSMENT
-----------------
Fairness: ${result.ethicsRadar.fairness}%
Transparency: ${result.ethicsRadar.transparency}%
Privacy: ${result.ethicsRadar.privacy}%
Accountability: ${result.ethicsRadar.accountability}%
Safety: ${result.ethicsRadar.safety}%

RECOMMENDATIONS
--------------
${result.recommendations.map((rec, i) => `${i + 1}. ${rec}`).join('\n')}

Generated by Ethic & Bias - ${new Date().toLocaleString()}
    `.trim();

    const blob = new Blob([reportContent], { type: 'text/plain' });
    const url = window.URL.createObjectURL(blob);
    const link = document.createElement('a');
    link.href = url;
    link.download = `ethics-bias-report-${Date.now()}.txt`;
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
    window.URL.revokeObjectURL(url);
  };

  return (
    <Card className="glow-card p-8 space-y-8">
      <div className="flex items-center justify-between">
        <div className="flex items-center gap-3">
          <FileText className="h-6 w-6 text-accent" />
          <h2 className="text-2xl font-semibold">Analysis Report</h2>
        </div>
        <Button
          variant="outline"
          size="sm"
          onClick={handleDownloadReport}
          className="border-border hover:bg-card/50"
        >
          <Download className="mr-2 h-4 w-4" />
          Download PDF
        </Button>
      </div>

      <p className="text-muted-foreground">
        Comprehensive ethics and bias assessment with actionable recommendations
      </p>

      {/* Visualizations */}
      <div className="grid md:grid-cols-2 gap-8 py-6">
        <div className="flex flex-col items-center justify-center p-6 rounded-lg bg-secondary/30">
          <h3 className="text-lg font-semibold mb-4">Bias Score Visualization</h3>
          <BiasScoreGauge score={result.biasScore} />
        </div>

        <div className="flex flex-col items-center justify-center p-6 rounded-lg bg-secondary/30">
          <h3 className="text-lg font-semibold mb-4">Ethics Radar Analysis</h3>
          <EthicsRadar data={result.ethicsRadar} />
        </div>
      </div>

      {/* Summary */}
      <div className="space-y-4">
        <h3 className="text-xl font-semibold">Summary</h3>
        <p className="text-muted-foreground leading-relaxed">{result.summary}</p>
      </div>

      {/* Key Findings */}
      <div className="space-y-4">
        <h3 className="text-xl font-semibold">Key Findings</h3>
        <div className="space-y-2">
          {result.keyFindings.map((finding, index) => (
            <div key={index} className="flex items-start gap-3 p-3 rounded-lg bg-secondary/50">
              <Badge variant="outline" className="mt-0.5">
                {index + 1}
              </Badge>
              <p className="text-sm text-foreground flex-1">{finding}</p>
            </div>
          ))}
        </div>
      </div>

      {/* Ethical Assessment */}
      <div className="space-y-4">
        <h3 className="text-xl font-semibold">Ethical Assessment</h3>
        <div className="grid grid-cols-2 md:grid-cols-3 gap-4">
          {Object.entries(result.ethicsRadar).map(([key, value]) => (
            <div key={key} className="p-4 rounded-lg bg-secondary/30 text-center">
              <p className="text-2xl font-bold gradient-text">{value}%</p>
              <p className="text-sm text-muted-foreground capitalize mt-1">{key}</p>
            </div>
          ))}
        </div>
      </div>

      {/* Recommendations */}
      <div className="space-y-4">
        <h3 className="text-xl font-semibold">Recommendations</h3>
        <div className="space-y-2">
          {result.recommendations.map((rec, index) => (
            <div key={index} className="flex items-start gap-3 p-3 rounded-lg bg-accent/10 border border-accent/30">
              <Sparkles className="h-5 w-5 text-accent mt-0.5 flex-shrink-0" />
              <p className="text-sm text-foreground flex-1">{rec}</p>
            </div>
          ))}
        </div>
      </div>

      {/* Action Button */}
      <Button
        onClick={onMitigateBias}
        disabled={isMitigating}
        className="w-full bg-accent hover:bg-accent/90 text-accent-foreground shadow-lg shadow-accent/30 transition-all duration-300 hover:shadow-xl hover:shadow-accent/50"
        size="lg"
      >
        {isMitigating ? (
          <>
            <div className="pulse-ring mr-2 h-5 w-5 rounded-full border-2 border-current" />
            Generating Unbiased Version...
          </>
        ) : (
          <>
            <Wand2 className="mr-2 h-5 w-5" />
            Mitigate Bias & Generate Improvements
          </>
        )}
      </Button>
    </Card>
  );
};
